name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Rust setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Cross install
        shell: bash
        run: cargo install cross
      - name: Build cli
        shell: bash
        run: |
          cross build --release --target ${{ matrix.platform.target }} --locked -p rtal

  linux-musl:
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            image: messense/rust-musl-cross:x86_64-musl
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-musl
            image: messense/rust-musl-cross:aarch64-musl
    runs-on: ${{ matrix.platform.runner }}
    container:
      image: ${{ matrix.platform.image }}
      volumes:
        - .:/home/rust/src
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build cli
        run: cargo build --release --target ${{ matrix.platform.target }} --locked -p rtal

  windows:
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Rust setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Build cli
        run: cargo build --release --target ${{ matrix.platform.target }} --locked -p rtal

  macos:
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64-apple-darwin
          - runner: macos-14
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Rust setup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
      - name: Build cli
        run: cargo build --release --target ${{ matrix.platform.target }} --locked -p rtal